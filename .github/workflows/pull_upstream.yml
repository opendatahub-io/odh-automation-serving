name: Pull from Upstream

on:
  workflow_dispatch:
    inputs:
      upstream_repo:
        description: 'Select Upstream Repository'
        required: true
        type: choice
        options:
          - 'openvinotoolkit/openvino_model_server'
          - 'kserve/kserve'
          - 'kserve/modelmesh'
          - 'caikit-tgis-serving'
          - 'openvinotoolkit/openvino'
          - 'vllm-project/vllm'
          - 'caikit/caikit-nlp'
          - 'caikit/caikit'
          - 'odh-model-controller'
          - 'caikit/caikit-tgis-backend'
          - 'caikit-nlp-client'
          - 'kubeflow/model-registry'
      sync_repo:
        description: 'Select Repository sync choice'
        required: true
        type: choice
        options:
          - 'Upstream->Midstream'
          - 'Midstream->Downstream'
      upstream_branch:
        description: 'Upstream branch to pull from'
        required: true
      midstream_branch:
        description: 'midstream branch to pull into'
        required: false
      target_branch:
        description: 'Target branch to pull into'
        required: true

jobs:
  pull:
    runs-on: ubuntu-latest
    outputs: 
        target_repo: ${{ steps.set-repo.outputs.target_org_repo }}
    steps:
    - name: Set repository
      id: set-repo
      run: |
        if [[ "${{ github.event.inputs.upstream_repo }}" == *"/"* ]]; then
          IFS='/' read -r upstreamOwner repoName <<< "${{ github.event.inputs.upstream_repo }}"
        else
          # No delimiter in the string, assign the whole string to part1
          repoName=${{ github.event.inputs.upstream_repo }}
          upstreamOwner=""
        fi
        if [ -n "$upstreamOwner" ] && [[ "${{ github.event.inputs.sync_repo }}" == "Upstream->Midstream" ]]; then
          echo "upstream_org_repo=${{ github.event.inputs.upstream_repo }}"
          echo "target_org_repo=opendatahub-io/$repoName" >> $GITHUB_OUTPUT
        else
          echo "upstream_org_repo=opendatahub-io/$repoName"
          echo "target_org_repo=red-hat-data-services/$repoName" >> $GITHUB_OUTPUT
        fi
        

    - name: Set git config
      run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
    - name: sync
      uses: TobKed/github-forks-sync-action@master
      with:
        github_token: ${{ secrets.PAT_TOKEN }}
        upstream_repository: ${{ steps.set-repo.outputs.upstream_org_repo }}
        midstream_repository: ${{ steps.set-repo.outputs.target_org_repo }}
        upstream_branch: ${{ github.event.inputs.upstream_branch }}
        target_branch: ${{ github.event.inputs.target_branch }}
        force: false
        tags: false